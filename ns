#!/usr/bin/env ruby
# put this somewhere in your path, and symlink some other common prefixes to it, e.g. ca, cf, cg, dom, eagl, gl, glu, ib, ui, web
# then invoke it with the appropriate prefix: `ns array` or `ui tableview` or `cf type`
prefix = File.basename($0)
klass = ARGV[0] || (puts("Usage: #{prefix} CLASS") && exit(1))
DOCSETS = [ # docsets to search within
	"/Library/Developer/Shared/Documentation/DocSets/*.docset",
	"/Developer/Documentation/DocSets/*.docset",
	"/Developer/Platforms/*.platform/Developer/Documentation/DocSets/*.docset"
]
PATTERNS = [ # these patterns are matched within <docset>/Contents/Resources/Documents/documentation/*/Reference/
	"#{prefix}#{klass}/Reference/reference.html", # iPhone/CoreGraphics
	"#{prefix}#{klass}Ref/index.html", # iPhone CoreFoundation
	"#{prefix}#{klass}Ref/Reference/reference.html", # CoreFoundation
	"#{prefix}#{klass}_Class/#{prefix}#{klass}/#{prefix}#{klass}.html", # iPhone/UIKit
	"#{prefix}#{klass}_Class/#{prefix}#{klass}ClassReference/#{prefix}#{klass}ClassReference.html",
	"#{prefix}#{klass}_Class/Introduction/Introduction.html",
	"#{prefix}#{klass}_class/Reference/#{prefix}#{klass}.html",
	"#{prefix}#{klass}_class/Reference/Reference.html",
	"#{prefix}#{klass}_ClassRef/Reference/#{prefix}#{klass}.html", # iPhone/OpenGL ES
	"#{prefix}#{klass}_protocol/Reference/#{prefix}#{klass}.html",
	"#{prefix}#{klass}_protocol/Reference/Reference.html",
	"*/Protocols/#{prefix}#{klass}_protocol/Reference/Reference.html",
	"*/Classes/#{prefix}#{klass}_Class/Introduction/Introduction.html",
	"*/Classes/#{prefix}#{klass}_Class/Reference/#{prefix}#{klass}.html",
	"*/Classes/#{prefix}#{klass}_Class/Reference/Reference.html",
	"Foundation/Classes/#{prefix}#{klass}_Class/Reference/Reference.html",
	"ManPages/man3/#{prefix}#{klass}.3.html", # man pages, e.g. OpenGL man pages
	"*/Classes/#{prefix}#{klass}_Class/#{prefix}#{klass}.html",
	"*/Classes/#{prefix}#{klass}_WebKitAdditions/Reference/Reference.html",
]
DOCSETS.each do |docset|
	PATTERNS.each do |pattern|
		matches = Dir.glob(docset + "/Contents/Resources/Documents/documentation/*/Reference/" + pattern)
		unless matches.empty?
			puts matches.first
			`open -a Safari #{matches.first}`
			exit 0
		end
	end
end
puts "No matching documentation found."